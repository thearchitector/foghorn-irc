name: CI

on: [push, pull_request]

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Lint Dockerfile
              uses: brpaz/hadolint-action@master
              with:
                  dockerfile: "Dockerfile"
            - name: Check formatting
              uses: psf/black@stable

    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: [3.7, 3.8, 3.9, pypy-3.7]
        env:
            POETRY_CACHE_DIR: ~/.cache/pypoetry
        name: ${{ matrix.python-version }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - uses: actions/cache@v2
              id: cache-deps
              with:
                  path: |
                      ${{ env.POETRY_CACHE_DIR }}
                      .venv
                  key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
            - run: |
                  python -m pip install --upgrade pip
                  pip install poetry
            - if: steps.cache-deps.outputs.cache-hit != 'true' && runner.os == 'macOS' && matrix.python-version == 'pypy-3.7'
              run: |
                  export LDFLAGS="-L$(brew --prefix openssl@1.1)/lib"
                  export CFLAGS="-I$(brew --prefix openssl@1.1)/include"
            - if: steps.cache-deps.outputs.cache-hit != 'true' && runner.os == 'Windows' && matrix.python-version == 'pypy-3.7'
              run: |
                  choco install openssl.light
                  set LIB=C:\Program Files\OpenSSL;%LIB%
                  set INCLUDE=C:\Program Files\OpenSSL;%INCLUDE%
            - name: Install dependencies
              if: steps.cache-deps.outputs.cache-hit != 'true'
              run: ${{ env.OPENSSL_LIBS }} poetry install --remove-untracked --no-ansi --no-interaction
            - name: Test with pytest
              run: poetry run pytest -vv tests
